{
  "stats": {
    "suites": 8,
    "tests": 37,
    "passes": 18,
    "pending": 0,
    "failures": 19,
    "start": "2020-02-09T03:03:35.013Z",
    "end": "2020-02-09T03:04:49.075Z",
    "duration": 74062,
    "testsRegistered": 37,
    "passPercent": 48.64864864864865,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "49fc6090-36e3-46cf-8f19-523330f6cb34",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [
        {
          "title": "\"after each\" hook",
          "fullTitle": "\"after each\" hook",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "checkForUnfulfilledExpectations.call(this);\nrecordedExpects = [];",
          "err": {},
          "uuid": "2a1fe108-4d2f-4acf-aa57-b81984e1def9",
          "parentUUID": "49fc6090-36e3-46cf-8f19-523330f6cb34",
          "isHook": true,
          "skipped": false
        }
      ],
      "tests": [],
      "suites": [
        {
          "uuid": "c5817c53-9204-4e81-84fa-400cfb764945",
          "title": "Scenarios for Create pet in pet store",
          "fullFile": "/Users/steveli/Work/PetStore/tests/pet/create.js",
          "file": "/tests/pet/create.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Scenarios for Create pet in pet store \"before all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "ec6329a9-191e-4cd3-b631-bed7fe2c51fc",
              "parentUUID": "c5817c53-9204-4e81-84fa-400cfb764945",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook",
              "fullTitle": "Scenarios for Create pet in pet store \"before each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "newPet = null;",
              "err": {},
              "uuid": "d73d6974-16a9-4169-b945-28b6a4cec51c",
              "parentUUID": "c5817c53-9204-4e81-84fa-400cfb764945",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook",
              "fullTitle": "Scenarios for Create pet in pet store \"after each\" hook",
              "timedOut": false,
              "duration": 1181,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (newPet != undefined) {\n    return chakram.get(`${constant.BASE_URL}${endpoint}/${newPet.id}`)\n    .then(function(res) {\n        if (res.status == 200) {\n            return chakram.delete(`${constant.BASE_URL}${endpoint}/${newPet.id}`)\n        }\n    });\n}",
              "err": {},
              "uuid": "0fc5a8a3-7b4d-4d74-a497-945c952229ef",
              "parentUUID": "c5817c53-9204-4e81-84fa-400cfb764945",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should create Pet without error",
              "fullTitle": "Scenarios for Create pet in pet store should create Pet without error",
              "timedOut": false,
              "duration": 1906,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "newPet = Object.assign({}, constant.DEFAULT_PET);\nnewPet.name = `newPet-${utils.genRandomStr(5)}`\n\nreturn chakram.post(`${constant.BASE_URL}${endpoint}`, newPet)\n.then(function(res) {\n    var pet = res.body;\n    newPet.id = pet.id;\n    expect(pet.name).to.equal(newPet.name);\n    expect(pet.status).to.equal(newPet.status);\n    expect(JSON.stringify(pet.photoUrls)).to.equal(JSON.stringify(newPet.photoUrls));\n    expect(JSON.stringify(pet.category)).to.equal(JSON.stringify(newPet.category));\n    expect(JSON.stringify(pet.tags)).to.equal(JSON.stringify(newPet.tags));\n});",
              "err": {},
              "uuid": "767f213a-a441-48d0-aca8-0a91f02f79dc",
              "parentUUID": "c5817c53-9204-4e81-84fa-400cfb764945",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should create Pet without error when no mandatory data is input",
              "fullTitle": "Scenarios for Create pet in pet store should create Pet without error when no mandatory data is input",
              "timedOut": false,
              "duration": 1234,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "newPet = Object.assign({}, constant.DEFAULT_PET);\nnewPet.name = `newPet-${utils.genRandomStr(5)}`\ndelete newPet.category;\ndelete newPet.tags;\ndelete newPet.status;\nreturn chakram.post(`${constant.BASE_URL}${endpoint}`, newPet)\n.then(function(res) {\n    var pet = res.body;\n    newPet.id = pet.id;\n    expect(pet.name).to.equal(newPet.name);\n    expect(JSON.stringify(pet.photoUrls)).to.equal(JSON.stringify(newPet.photoUrls));\n});",
              "err": {},
              "uuid": "a05981bf-c25d-447d-961e-429e4a5fe2f4",
              "parentUUID": "c5817c53-9204-4e81-84fa-400cfb764945",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return error when no Pet name on Pet creation",
              "fullTitle": "Scenarios for Create pet in pet store should return error when no Pet name on Pet creation",
              "timedOut": false,
              "duration": 1109,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "newPet = Object.assign({}, constant.DEFAULT_PET);\nnewPet.name = `newPet-${utils.genRandomStr(5)}`\ndelete newPet.name;\nreturn chakram.post(`${constant.BASE_URL}${endpoint}`, newPet)\n.then(function(res) {\n    return expect(res).to.have.status(405);\n});",
              "err": {
                "message": "AssertionError: expected status code 200 to equal 405",
                "estack": "AssertionError: expected status code 200 to equal 405\n    at /Users/steveli/Work/PetStore/tests/pet/create.js:69:40\n    at _fulfilled (node_modules/q/q.js:854:54)\n    at /Users/steveli/Work/PetStore/node_modules/q/q.js:883:30\n    at Promise.promise.promiseDispatch (node_modules/q/q.js:816:13)\n    at /Users/steveli/Work/PetStore/node_modules/q/q.js:624:44\n    at runSingle (node_modules/q/q.js:137:13)\n    at flush (node_modules/q/q.js:125:13)\n    at processTicksAndRejections (internal/process/task_queues.js:82:9)",
                "diff": null
              },
              "uuid": "2504cf82-c860-4b7c-a925-ab511d7ca30e",
              "parentUUID": "c5817c53-9204-4e81-84fa-400cfb764945",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return error when no Pet pictures on Pet creation",
              "fullTitle": "Scenarios for Create pet in pet store should return error when no Pet pictures on Pet creation",
              "timedOut": false,
              "duration": 1141,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "newPet = Object.assign({}, constant.DEFAULT_PET);\nnewPet.name = `newPet-${utils.genRandomStr(5)}`\ndelete newPet.photoUrls;\nreturn chakram.post(`${constant.BASE_URL}${endpoint}`, newPet)\n.then(function(res) {\n    return expect(res).to.have.status(405);\n});",
              "err": {
                "message": "AssertionError: expected status code 200 to equal 405",
                "estack": "AssertionError: expected status code 200 to equal 405\n    at /Users/steveli/Work/PetStore/tests/pet/create.js:80:40\n    at _fulfilled (node_modules/q/q.js:854:54)\n    at /Users/steveli/Work/PetStore/node_modules/q/q.js:883:30\n    at Promise.promise.promiseDispatch (node_modules/q/q.js:816:13)\n    at /Users/steveli/Work/PetStore/node_modules/q/q.js:624:44\n    at runSingle (node_modules/q/q.js:137:13)\n    at flush (node_modules/q/q.js:125:13)\n    at processTicksAndRejections (internal/process/task_queues.js:82:9)",
                "diff": null
              },
              "uuid": "27c9b197-fb3d-4ba1-874c-ada6609a0460",
              "parentUUID": "c5817c53-9204-4e81-84fa-400cfb764945",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "767f213a-a441-48d0-aca8-0a91f02f79dc",
            "a05981bf-c25d-447d-961e-429e4a5fe2f4"
          ],
          "failures": [
            "2504cf82-c860-4b7c-a925-ab511d7ca30e",
            "27c9b197-fb3d-4ba1-874c-ada6609a0460"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5390,
          "root": false,
          "rootEmpty": false,
          "_timeout": 15000
        },
        {
          "uuid": "d5bc1c63-95c9-4fcd-bd00-f6511de6a991",
          "title": "Scenarios for Delete pet in pet store",
          "fullFile": "/Users/steveli/Work/PetStore/tests/pet/delete.js",
          "file": "/tests/pet/delete.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Scenarios for Delete pet in pet store \"before all\" hook",
              "timedOut": false,
              "duration": 1064,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "newPet = Object.assign({}, constant.DEFAULT_PET);\nnewPet.name = `newPet-${utils.genRandomStr(5)}`\nreturn chakram.post(`${constant.BASE_URL}${endpoint}`, newPet)\n.then(function(res) {\n    newPet.id =  res.body.id;\n    return;\n});",
              "err": {},
              "uuid": "84b1a476-fa6f-4d62-9e5a-53d1b44817cb",
              "parentUUID": "d5bc1c63-95c9-4fcd-bd00-f6511de6a991",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "Scenarios for Delete pet in pet store \"after all\" hook",
              "timedOut": false,
              "duration": 1143,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (newPet != undefined) {\n    return chakram.delete(`${constant.BASE_URL}${endpoint}/${newPet.id}`);\n}",
              "err": {},
              "uuid": "3826f333-1369-48ed-ba17-a4f67d17a2d1",
              "parentUUID": "d5bc1c63-95c9-4fcd-bd00-f6511de6a991",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should Delete Pet without error",
              "fullTitle": "Scenarios for Delete pet in pet store should Delete Pet without error",
              "timedOut": false,
              "duration": 1079,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "return chakram.delete(`${constant.BASE_URL}${endpoint}/${newPet.id}`)\n.then(function(res) {\n    expect(res).to.have.status(200);\n    return chakram.get(`${constant.BASE_URL}${endpoint}/${newPet.id}`)\n}).then(function(res){\n    return expect(res).to.have.status(404);\n});",
              "err": {
                "message": "AssertionError: expected status code 404 to equal 200",
                "estack": "AssertionError: expected status code 404 to equal 200\n    at /Users/steveli/Work/PetStore/tests/pet/delete.js:30:33\n    at _fulfilled (node_modules/q/q.js:854:54)\n    at /Users/steveli/Work/PetStore/node_modules/q/q.js:883:30\n    at Promise.promise.promiseDispatch (node_modules/q/q.js:816:13)\n    at /Users/steveli/Work/PetStore/node_modules/q/q.js:624:44\n    at runSingle (node_modules/q/q.js:137:13)\n    at flush (node_modules/q/q.js:125:13)\n    at processTicksAndRejections (internal/process/task_queues.js:82:9)",
                "diff": null
              },
              "uuid": "872de2c2-a1b2-41cc-8850-ac6e66d607ca",
              "parentUUID": "d5bc1c63-95c9-4fcd-bd00-f6511de6a991",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return error when deleting Pet with invalid id",
              "fullTitle": "Scenarios for Delete pet in pet store should return error when deleting Pet with invalid id",
              "timedOut": false,
              "duration": 1157,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var invalid_id = \"-1\"\nreturn chakram.delete(`${constant.BASE_URL}${endpoint}/${invalid_id}`)\n.then(function(res) {\n    expect(res).to.have.status(404);\n})",
              "err": {
                "message": "AssertionError: expected status code 200 to equal 404",
                "estack": "AssertionError: expected status code 200 to equal 404\n    at /Users/steveli/Work/PetStore/tests/pet/delete.js:42:33\n    at _fulfilled (node_modules/q/q.js:854:54)\n    at /Users/steveli/Work/PetStore/node_modules/q/q.js:883:30\n    at Promise.promise.promiseDispatch (node_modules/q/q.js:816:13)\n    at /Users/steveli/Work/PetStore/node_modules/q/q.js:624:44\n    at runSingle (node_modules/q/q.js:137:13)\n    at flush (node_modules/q/q.js:125:13)\n    at processTicksAndRejections (internal/process/task_queues.js:82:9)",
                "diff": null
              },
              "uuid": "7448954e-259c-44e0-8526-3f9dcd2c888c",
              "parentUUID": "d5bc1c63-95c9-4fcd-bd00-f6511de6a991",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "872de2c2-a1b2-41cc-8850-ac6e66d607ca",
            "7448954e-259c-44e0-8526-3f9dcd2c888c"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2236,
          "root": false,
          "rootEmpty": false,
          "_timeout": 15000
        },
        {
          "uuid": "c43bb183-7fb2-4fd8-99c1-9ac23c9ff7ca",
          "title": "Scenarios for Get pets in pet store",
          "fullFile": "/Users/steveli/Work/PetStore/tests/pet/get.js",
          "file": "/tests/pet/get.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Scenarios for Get pets in pet store \"before all\" hook",
              "timedOut": false,
              "duration": 1175,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "newPet = Object.assign({}, constant.DEFAULT_PET);\nnewPet.name = `newPet-${utils.genRandomStr(5)}`\nreturn chakram.post(`${constant.BASE_URL}${endpoint}`, newPet)\n.then(function(res) {\n    newPet.id = res.body.id;\n    return;\n});",
              "err": {},
              "uuid": "0ce048b6-9f6f-4f47-ba25-ad81ea4f3ff0",
              "parentUUID": "c43bb183-7fb2-4fd8-99c1-9ac23c9ff7ca",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "Scenarios for Get pets in pet store \"after all\" hook",
              "timedOut": false,
              "duration": 1301,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (newPet != undefined) {\n    return chakram.delete(`${constant.BASE_URL}${endpoint}/${newPet.id}`);\n}",
              "err": {},
              "uuid": "7a562871-b9e2-4014-b26a-ee2c8add1c1b",
              "parentUUID": "c43bb183-7fb2-4fd8-99c1-9ac23c9ff7ca",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should Get Pet by Id",
              "fullTitle": "Scenarios for Get pets in pet store should Get Pet by Id",
              "timedOut": false,
              "duration": 1067,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "return chakram.get(`${constant.BASE_URL}${endpoint}/${newPet.id}`)\n.then(function(res) {\n    var pet = res.body;\n    expect(pet.name).to.equal(newPet.name);\n    expect(pet.status).to.equal(newPet.status);\n    expect(JSON.stringify(pet.photoUrls)).to.equal(JSON.stringify(newPet.photoUrls));\n    expect(JSON.stringify(pet.category)).to.equal(JSON.stringify(newPet.category));\n    expect(JSON.stringify(pet.tags)).to.equal(JSON.stringify(newPet.tags));\n});",
              "err": {
                "message": "AssertionError: expected undefined to equal 'newPet-WV3h1'",
                "estack": "AssertionError: expected undefined to equal 'newPet-WV3h1'\n    at /Users/steveli/Work/PetStore/tests/pet/get.js:31:33\n    at _fulfilled (node_modules/q/q.js:854:54)\n    at /Users/steveli/Work/PetStore/node_modules/q/q.js:883:30\n    at Promise.promise.promiseDispatch (node_modules/q/q.js:816:13)\n    at /Users/steveli/Work/PetStore/node_modules/q/q.js:624:44\n    at runSingle (node_modules/q/q.js:137:13)\n    at flush (node_modules/q/q.js:125:13)\n    at processTicksAndRejections (internal/process/task_queues.js:82:9)",
                "diff": null
              },
              "uuid": "96f9e502-19ef-4b54-81b5-5cc1d9caa12b",
              "parentUUID": "c43bb183-7fb2-4fd8-99c1-9ac23c9ff7ca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return error when getting Pet which not exists",
              "fullTitle": "Scenarios for Get pets in pet store should return error when getting Pet which not exists",
              "timedOut": false,
              "duration": 1131,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var not_exist_pet = \"not_exist\"\nreturn chakram.get(`${constant.BASE_URL}${endpoint}/${not_exist_pet}`)\n.then(function(res) {\n    expect(res).to.have.status(404);\n})",
              "err": {},
              "uuid": "1d282e8c-bb44-4f8a-95aa-932c82e95596",
              "parentUUID": "c43bb183-7fb2-4fd8-99c1-9ac23c9ff7ca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return error when getting Pet with invalid id",
              "fullTitle": "Scenarios for Get pets in pet store should return error when getting Pet with invalid id",
              "timedOut": false,
              "duration": 1124,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var invalid_id = \"\"\nreturn chakram.get(`${constant.BASE_URL}${endpoint}/${invalid_id}`)\n.then(function(res) {\n    expect(res).to.have.status(400);\n})",
              "err": {
                "message": "AssertionError: expected status code 405 to equal 400",
                "estack": "AssertionError: expected status code 405 to equal 400\n    at /Users/steveli/Work/PetStore/tests/pet/get.js:53:33\n    at _fulfilled (node_modules/q/q.js:854:54)\n    at /Users/steveli/Work/PetStore/node_modules/q/q.js:883:30\n    at Promise.promise.promiseDispatch (node_modules/q/q.js:816:13)\n    at /Users/steveli/Work/PetStore/node_modules/q/q.js:624:44\n    at runSingle (node_modules/q/q.js:137:13)\n    at flush (node_modules/q/q.js:125:13)\n    at processTicksAndRejections (internal/process/task_queues.js:82:9)",
                "diff": null
              },
              "uuid": "bcef67cd-b76b-4cdd-b6be-05671a42d29f",
              "parentUUID": "c43bb183-7fb2-4fd8-99c1-9ac23c9ff7ca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should Get Pets by status",
              "fullTitle": "Scenarios for Get pets in pet store should Get Pets by status",
              "timedOut": false,
              "duration": 2273,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var status = \"available\"\nreturn chakram.get(`${constant.BASE_URL}${endpoint}/findByStatus?status=${status}`)\n.then(function(res) {\n    var pets = res.body;\n    var createdPets = pets.filter(function(o) { return o.name == newPet.name });\n    expect(createdPets.length).to.be.equal(1);            \n});",
              "err": {},
              "uuid": "21af2180-5394-4464-bd0a-1473a876b2f0",
              "parentUUID": "c43bb183-7fb2-4fd8-99c1-9ac23c9ff7ca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return error when getting Pets by invalid status",
              "fullTitle": "Scenarios for Get pets in pet store should return error when getting Pets by invalid status",
              "timedOut": false,
              "duration": 1196,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var status = \"notexists\"\nreturn chakram.get(`${constant.BASE_URL}${endpoint}/findByStatus?status=${status}`)\n.then(function(res) {\n    expect(res).to.have.status(400);         \n});",
              "err": {
                "message": "AssertionError: expected status code 200 to equal 400",
                "estack": "AssertionError: expected status code 200 to equal 400\n    at /Users/steveli/Work/PetStore/tests/pet/get.js:73:33\n    at _fulfilled (node_modules/q/q.js:854:54)\n    at /Users/steveli/Work/PetStore/node_modules/q/q.js:883:30\n    at Promise.promise.promiseDispatch (node_modules/q/q.js:816:13)\n    at /Users/steveli/Work/PetStore/node_modules/q/q.js:624:44\n    at runSingle (node_modules/q/q.js:137:13)\n    at flush (node_modules/q/q.js:125:13)\n    at processTicksAndRejections (internal/process/task_queues.js:82:9)",
                "diff": null
              },
              "uuid": "f78281c6-f4a7-4d80-bf20-6a6c91611b74",
              "parentUUID": "c43bb183-7fb2-4fd8-99c1-9ac23c9ff7ca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should Get Pets by empty status",
              "fullTitle": "Scenarios for Get pets in pet store should Get Pets by empty status",
              "timedOut": false,
              "duration": 1124,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var status = \"\";\nreturn chakram.get(`${constant.BASE_URL}${endpoint}/findByStatus?status=${status}`)\n.then(function(res) {\n    expect(res).to.have.status(400);         \n});",
              "err": {
                "message": "AssertionError: expected status code 200 to equal 400",
                "estack": "AssertionError: expected status code 200 to equal 400\n    at /Users/steveli/Work/PetStore/tests/pet/get.js:82:33\n    at _fulfilled (node_modules/q/q.js:854:54)\n    at /Users/steveli/Work/PetStore/node_modules/q/q.js:883:30\n    at Promise.promise.promiseDispatch (node_modules/q/q.js:816:13)\n    at /Users/steveli/Work/PetStore/node_modules/q/q.js:624:44\n    at runSingle (node_modules/q/q.js:137:13)\n    at flush (node_modules/q/q.js:125:13)\n    at processTicksAndRejections (internal/process/task_queues.js:82:9)",
                "diff": null
              },
              "uuid": "afc4e366-27d9-42d8-a6dd-4a08f061b6eb",
              "parentUUID": "c43bb183-7fb2-4fd8-99c1-9ac23c9ff7ca",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1d282e8c-bb44-4f8a-95aa-932c82e95596",
            "21af2180-5394-4464-bd0a-1473a876b2f0"
          ],
          "failures": [
            "96f9e502-19ef-4b54-81b5-5cc1d9caa12b",
            "bcef67cd-b76b-4cdd-b6be-05671a42d29f",
            "f78281c6-f4a7-4d80-bf20-6a6c91611b74",
            "afc4e366-27d9-42d8-a6dd-4a08f061b6eb"
          ],
          "pending": [],
          "skipped": [],
          "duration": 7915,
          "root": false,
          "rootEmpty": false,
          "_timeout": 15000
        },
        {
          "uuid": "d97eeddf-b6fb-466b-8aed-d4d8d17eb787",
          "title": "Scenarios for Update pet in pet store",
          "fullFile": "/Users/steveli/Work/PetStore/tests/pet/update.js",
          "file": "/tests/pet/update.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Scenarios for Update pet in pet store \"before all\" hook",
              "timedOut": false,
              "duration": 1396,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "newPet = Object.assign({}, constant.DEFAULT_PET);\nnewPet.name = `newPet-${utils.genRandomStr(5)}`\nreturn chakram.post(`${constant.BASE_URL}${endpoint}`, newPet)\n.then(function(res) {\n    newPet.id = res.body.id;\n});",
              "err": {},
              "uuid": "9fda4b12-376e-43b8-8a68-7055ae0e34ac",
              "parentUUID": "d97eeddf-b6fb-466b-8aed-d4d8d17eb787",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "Scenarios for Update pet in pet store \"after all\" hook",
              "timedOut": false,
              "duration": 1060,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (newPet != undefined) {\n    return chakram.delete(`${constant.BASE_URL}${endpoint}/${newPet.id}`)\n}",
              "err": {},
              "uuid": "542f1a95-e054-42e8-99a3-85c27fac3913",
              "parentUUID": "d97eeddf-b6fb-466b-8aed-d4d8d17eb787",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should update existing pet",
              "fullTitle": "Scenarios for Update pet in pet store should update existing pet",
              "timedOut": false,
              "duration": 1299,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var updatePetData = Object.assign({}, newPet);\nupdatePetData.name = `update_${updatePetData.name}`;\nupdatePetData.status = 'sold';\nreturn chakram.put(`${constant.BASE_URL}${endpoint}`, updatePetData)\n.then(function(res) {\n    var pet = res.body;\n    expect(pet.name).to.equal(updatePetData.name);\n    expect(pet.status).to.equal(updatePetData.status);\n    expect(JSON.stringify(pet.photoUrls)).to.equal(JSON.stringify(newPet.photoUrls));\n    expect(JSON.stringify(pet.category)).to.equal(JSON.stringify(newPet.category));\n    expect(JSON.stringify(pet.tags)).to.equal(JSON.stringify(newPet.tags));\n});",
              "err": {},
              "uuid": "0acc4ff1-b574-4b6b-81eb-46cb3dd9e0e0",
              "parentUUID": "d97eeddf-b6fb-466b-8aed-d4d8d17eb787",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return error when updating invalid pet",
              "fullTitle": "Scenarios for Update pet in pet store should return error when updating invalid pet",
              "timedOut": false,
              "duration": 1121,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var updatePetData = Object.assign({}, newPet);\nupdatePetData.id = \"\";\nupdatePetData.name = `update_${updatePetData.name}`;\nupdatePetData.status = 'sold';\nreturn chakram.put(`${constant.BASE_URL}${endpoint}`, updatePetData)\n.then(function(res) {\n    return expect(res).to.have.status(400);\n});",
              "err": {
                "message": "AssertionError: expected status code 200 to equal 400",
                "estack": "AssertionError: expected status code 200 to equal 400\n    at /Users/steveli/Work/PetStore/tests/pet/update.js:55:40\n    at _fulfilled (node_modules/q/q.js:854:54)\n    at /Users/steveli/Work/PetStore/node_modules/q/q.js:883:30\n    at Promise.promise.promiseDispatch (node_modules/q/q.js:816:13)\n    at /Users/steveli/Work/PetStore/node_modules/q/q.js:624:44\n    at runSingle (node_modules/q/q.js:137:13)\n    at flush (node_modules/q/q.js:125:13)\n    at processTicksAndRejections (internal/process/task_queues.js:82:9)",
                "diff": null
              },
              "uuid": "e042d359-1a2d-4f17-a977-1c0a3f4c9c47",
              "parentUUID": "d97eeddf-b6fb-466b-8aed-d4d8d17eb787",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return error when updating not existing pet",
              "fullTitle": "Scenarios for Update pet in pet store should return error when updating not existing pet",
              "timedOut": false,
              "duration": 1125,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var updatePetData = Object.assign({}, newPet);\nupdatePetData.id = \"0\";\nupdatePetData.name = `update_${updatePetData.name}`;\nupdatePetData.status = 'sold';\nreturn chakram.put(`${constant.BASE_URL}${endpoint}`, updatePetData)\n.then(function(res) {\n    return expect(res).to.have.status(404);\n});",
              "err": {
                "message": "AssertionError: expected status code 200 to equal 404",
                "estack": "AssertionError: expected status code 200 to equal 404\n    at /Users/steveli/Work/PetStore/tests/pet/update.js:69:40\n    at _fulfilled (node_modules/q/q.js:854:54)\n    at /Users/steveli/Work/PetStore/node_modules/q/q.js:883:30\n    at Promise.promise.promiseDispatch (node_modules/q/q.js:816:13)\n    at /Users/steveli/Work/PetStore/node_modules/q/q.js:624:44\n    at runSingle (node_modules/q/q.js:137:13)\n    at flush (node_modules/q/q.js:125:13)\n    at processTicksAndRejections (internal/process/task_queues.js:82:9)",
                "diff": null
              },
              "uuid": "63b5d9a7-e958-400e-a5f9-e8e9cb760faa",
              "parentUUID": "d97eeddf-b6fb-466b-8aed-d4d8d17eb787",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return error when updating pet with invalid value",
              "fullTitle": "Scenarios for Update pet in pet store should return error when updating pet with invalid value",
              "timedOut": false,
              "duration": 1057,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var updatePetData = Object.assign({}, newPet);\nupdatePetData.photoUrls = `invalid`;\nupdatePetData.status = 'sold';\nreturn chakram.put(`${constant.BASE_URL}${endpoint}`, updatePetData)\n.then(function(res) {\n    return expect(res).to.have.status(405);\n});",
              "err": {
                "message": "AssertionError: expected status code 500 to equal 405",
                "estack": "AssertionError: expected status code 500 to equal 405\n    at /Users/steveli/Work/PetStore/tests/pet/update.js:82:40\n    at _fulfilled (node_modules/q/q.js:854:54)\n    at /Users/steveli/Work/PetStore/node_modules/q/q.js:883:30\n    at Promise.promise.promiseDispatch (node_modules/q/q.js:816:13)\n    at /Users/steveli/Work/PetStore/node_modules/q/q.js:624:44\n    at runSingle (node_modules/q/q.js:137:13)\n    at flush (node_modules/q/q.js:125:13)\n    at processTicksAndRejections (internal/process/task_queues.js:82:9)",
                "diff": null
              },
              "uuid": "02ee3222-1031-4ac1-8cc0-11e8822a9def",
              "parentUUID": "d97eeddf-b6fb-466b-8aed-d4d8d17eb787",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update existing pet with form data",
              "fullTitle": "Scenarios for Update pet in pet store should update existing pet with form data",
              "timedOut": false,
              "duration": 2255,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return chakram.post(`${constant.BASE_URL}${endpoint}/${newPet.id}`, `name=update_${newPet.name}&status=sold`, {json: true, headers: { \"content-type\":\"application/x-www-form-urlencoded\" }})\n.then(function() {\n    return chakram.get(`${constant.BASE_URL}${endpoint}/${newPet.id}`)\n}).then(function(res){\n    var pet = res.body;\n    expect(pet.name).to.equal(`update_${newPet.name}`);\n    expect(pet.status).to.equal('sold');\n    expect(JSON.stringify(pet.photoUrls)).to.equal(JSON.stringify(newPet.photoUrls));\n    expect(JSON.stringify(pet.category)).to.equal(JSON.stringify(newPet.category));\n    expect(JSON.stringify(pet.tags)).to.equal(JSON.stringify(newPet.tags));\n    return;\n});",
              "err": {},
              "uuid": "16844da6-ca08-48c3-93f7-452f51371ffe",
              "parentUUID": "d97eeddf-b6fb-466b-8aed-d4d8d17eb787",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return error while updating existing pet without data",
              "fullTitle": "Scenarios for Update pet in pet store should return error while updating existing pet without data",
              "timedOut": false,
              "duration": 1084,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var updatePetData = {}\nreturn chakram.post(`${constant.BASE_URL}${endpoint}/${newPet.id}`, \"\", {json: true, headers: { \"content-type\":\"application/x-www-form-urlencoded\" }})\n.then(function(res) {\n    return expect(res).to.have.status(405);\n});",
              "err": {
                "message": "AssertionError: expected status code 200 to equal 405",
                "estack": "AssertionError: expected status code 200 to equal 405\n    at /Users/steveli/Work/PetStore/tests/pet/update.js:109:40\n    at _fulfilled (node_modules/q/q.js:854:54)\n    at /Users/steveli/Work/PetStore/node_modules/q/q.js:883:30\n    at Promise.promise.promiseDispatch (node_modules/q/q.js:816:13)\n    at /Users/steveli/Work/PetStore/node_modules/q/q.js:624:44\n    at runSingle (node_modules/q/q.js:137:13)\n    at flush (node_modules/q/q.js:125:13)\n    at processTicksAndRejections (internal/process/task_queues.js:82:9)",
                "diff": null
              },
              "uuid": "98861ca5-3863-4e0e-a2e5-a41259ee9eed",
              "parentUUID": "d97eeddf-b6fb-466b-8aed-d4d8d17eb787",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return error while updating existing pet with invalid status",
              "fullTitle": "Scenarios for Update pet in pet store should return error while updating existing pet with invalid status",
              "timedOut": false,
              "duration": 1128,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "return chakram.post(`${constant.BASE_URL}${endpoint}/${newPet.id}`, `name=update_${newPet.name}&status=123`, {json: true, headers: { \"content-type\":\"application/x-www-form-urlencoded\" }})\n.then(function(res) {\n    return expect(res).to.have.status(405);\n});",
              "err": {
                "message": "AssertionError: expected status code 200 to equal 405",
                "estack": "AssertionError: expected status code 200 to equal 405\n    at /Users/steveli/Work/PetStore/tests/pet/update.js:117:40\n    at _fulfilled (node_modules/q/q.js:854:54)\n    at /Users/steveli/Work/PetStore/node_modules/q/q.js:883:30\n    at Promise.promise.promiseDispatch (node_modules/q/q.js:816:13)\n    at /Users/steveli/Work/PetStore/node_modules/q/q.js:624:44\n    at runSingle (node_modules/q/q.js:137:13)\n    at flush (node_modules/q/q.js:125:13)\n    at processTicksAndRejections (internal/process/task_queues.js:82:9)",
                "diff": null
              },
              "uuid": "458fc948-5aa0-4404-8e37-0117f3043574",
              "parentUUID": "d97eeddf-b6fb-466b-8aed-d4d8d17eb787",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update existing pet with image file",
              "fullTitle": "Scenarios for Update pet in pet store should update existing pet with image file",
              "timedOut": false,
              "duration": 1386,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var fs = require('fs');\nreturn chakram.post(`${constant.BASE_URL}${endpoint}/${newPet.id}/uploadImage`, undefined, {\n    formData: {\n        pkgFile: fs.createReadStream(path.join(__dirname, 'test.jpg'))\n    }\n}).then(function(res){\n    return expect(res).to.have.status(200);\n});",
              "err": {
                "message": "AssertionError: expected status code 500 to equal 200",
                "estack": "AssertionError: expected status code 500 to equal 200\n    at /Users/steveli/Work/PetStore/tests/pet/update.js:129:40\n    at _fulfilled (node_modules/q/q.js:854:54)\n    at /Users/steveli/Work/PetStore/node_modules/q/q.js:883:30\n    at Promise.promise.promiseDispatch (node_modules/q/q.js:816:13)\n    at /Users/steveli/Work/PetStore/node_modules/q/q.js:624:44\n    at runSingle (node_modules/q/q.js:137:13)\n    at flush (node_modules/q/q.js:125:13)\n    at processTicksAndRejections (internal/process/task_queues.js:82:9)",
                "diff": null
              },
              "uuid": "0a9a63ae-3159-47ef-9927-473cfdd70dd8",
              "parentUUID": "d97eeddf-b6fb-466b-8aed-d4d8d17eb787",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0acc4ff1-b574-4b6b-81eb-46cb3dd9e0e0",
            "16844da6-ca08-48c3-93f7-452f51371ffe"
          ],
          "failures": [
            "e042d359-1a2d-4f17-a977-1c0a3f4c9c47",
            "63b5d9a7-e958-400e-a5f9-e8e9cb760faa",
            "02ee3222-1031-4ac1-8cc0-11e8822a9def",
            "98861ca5-3863-4e0e-a2e5-a41259ee9eed",
            "458fc948-5aa0-4404-8e37-0117f3043574",
            "0a9a63ae-3159-47ef-9927-473cfdd70dd8"
          ],
          "pending": [],
          "skipped": [],
          "duration": 10455,
          "root": false,
          "rootEmpty": false,
          "_timeout": 15000
        },
        {
          "uuid": "db9ffa83-bd43-47aa-90b5-d7c94763b098",
          "title": "Scenarios for CREATE user in pet store",
          "fullFile": "/Users/steveli/Work/PetStore/tests/user/create.js",
          "file": "/tests/user/create.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Scenarios for CREATE user in pet store \"before all\" hook",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "userList.push(constant.DEFAULT_USER);\nvar user2 = Object.assign({}, constant.DEFAULT_USER);\nuser2.username = \"default2\";\nuserList.push(user2);\nvar user3 = Object.assign({}, constant.DEFAULT_USER);\nuser3.username = \"default3\";\nuserList.push(user3);",
              "err": {},
              "uuid": "06543aca-b593-425c-9a74-8748c24f89d3",
              "parentUUID": "db9ffa83-bd43-47aa-90b5-d7c94763b098",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "Scenarios for CREATE user in pet store \"after all\" hook",
              "timedOut": false,
              "duration": 1578,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var multipleResponses = [];\nmultipleResponses.push(chakram.delete(`${constant.BASE_URL}${endpoint}/${userList[0].username}`));\nmultipleResponses.push(chakram.delete(`${constant.BASE_URL}${endpoint}/${userList[1].username}`));\nmultipleResponses.push(chakram.delete(`${constant.BASE_URL}${endpoint}/${userList[2].username}`));\nreturn chakram.all(multipleResponses).then(function(responses) {\n\n});",
              "err": {},
              "uuid": "d9cb4d78-f408-413b-8485-82bff3f507a5",
              "parentUUID": "db9ffa83-bd43-47aa-90b5-d7c94763b098",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should create user with array without error",
              "fullTitle": "Scenarios for CREATE user in pet store should create user with array without error",
              "timedOut": false,
              "duration": 2381,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return chakram.post(`${constant.BASE_URL}${endpoint}/createWithArray`, userList)\n.then(function(res) {\n    var multipleResponses = [];\n    multipleResponses.push(chakram.get(`${constant.BASE_URL}${endpoint}/${userList[0].username}`));\n    multipleResponses.push(chakram.get(`${constant.BASE_URL}${endpoint}/${userList[1].username}`));\n    multipleResponses.push(chakram.get(`${constant.BASE_URL}${endpoint}/${userList[2].username}`));\n    return chakram.all(multipleResponses).then(function(responses) {\n        var returnedUsernames = responses.map(function(response) {\n            return response.body.username;\n        });\n        expect(returnedUsernames.indexOf(userList[0].username) >= 0).to.equal(true);\n        expect(returnedUsernames.indexOf(userList[1].username) >= 0).to.equal(true);\n        expect(returnedUsernames.indexOf(userList[2].username) >= 0).to.equal(true);\n    });\n});",
              "err": {},
              "uuid": "348440f8-f59a-4693-a091-fda4ff390208",
              "parentUUID": "db9ffa83-bd43-47aa-90b5-d7c94763b098",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should create user with list without error",
              "fullTitle": "Scenarios for CREATE user in pet store should create user with list without error",
              "timedOut": false,
              "duration": 2256,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return chakram.post(`${constant.BASE_URL}${endpoint}/createWithList`, userList)\n.then(function(res) {\n    var multipleResponses = [];\n    multipleResponses.push(chakram.get(`${constant.BASE_URL}${endpoint}/${userList[0].username}`));\n    multipleResponses.push(chakram.get(`${constant.BASE_URL}${endpoint}/${userList[1].username}`));\n    multipleResponses.push(chakram.get(`${constant.BASE_URL}${endpoint}/${userList[2].username}`));\n    return chakram.all(multipleResponses).then(function(responses) {\n        var returnedUsernames = responses.map(function(response) {\n            return response.body.username;\n        });\n        expect(returnedUsernames.indexOf(userList[0].username) >= 0).to.equal(true);\n        expect(returnedUsernames.indexOf(userList[1].username) >= 0).to.equal(true);\n        expect(returnedUsernames.indexOf(userList[2].username) >= 0).to.equal(true);\n    });\n});",
              "err": {},
              "uuid": "d7ef7ce5-278b-4ac2-86d7-ccc006381ba5",
              "parentUUID": "db9ffa83-bd43-47aa-90b5-d7c94763b098",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "348440f8-f59a-4693-a091-fda4ff390208",
            "d7ef7ce5-278b-4ac2-86d7-ccc006381ba5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4637,
          "root": false,
          "rootEmpty": false,
          "_timeout": 15000
        },
        {
          "uuid": "deb24847-9f98-4a98-ad00-2b75245b28b4",
          "title": "Scenarios for Delete user in pet store",
          "fullFile": "/Users/steveli/Work/PetStore/tests/user/delete.js",
          "file": "/tests/user/delete.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: create a test user, then",
              "fullTitle": "Scenarios for Delete user in pet store \"before all\" hook: create a test user, then",
              "timedOut": false,
              "duration": 1206,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var res = chakram.post(`${constant.BASE_URL}${endpoint}`, constant.DEFAULT_USER);\nreturn expect(res).to.have.status(200);",
              "err": {},
              "uuid": "a1d8fbd3-ee40-4b28-b4f7-c4b7602f5f4a",
              "parentUUID": "deb24847-9f98-4a98-ad00-2b75245b28b4",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "Scenarios for Delete user in pet store \"after all\" hook",
              "timedOut": false,
              "duration": 1070,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return chakram.get(`${constant.BASE_URL}${endpoint}/${constant.DEFAULT_USER.username}`)\n.then(function(res) {\n    if (res.status == 200) {\n        return chakram.delete(`${constant.BASE_URL}${endpoint}/${constant.DEFAULT_USER.username}`)\n    }\n});",
              "err": {},
              "uuid": "a063b9b4-2606-45f0-af25-7f3647ccd34a",
              "parentUUID": "deb24847-9f98-4a98-ad00-2b75245b28b4",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should delete the user without error",
              "fullTitle": "Scenarios for Delete user in pet store should delete the user without error",
              "timedOut": false,
              "duration": 2126,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return chakram.delete(`${constant.BASE_URL}${endpoint}/${constant.DEFAULT_USER.username}`)\n.then(function(res) {\n    expect(res).to.have.status(200);\n    return chakram.get(`${constant.BASE_URL}${endpoint}/${constant.DEFAULT_USER.username}`)\n}).then(function(res){\n    return expect(res).to.have.status(404);\n});",
              "err": {},
              "uuid": "d699bd95-76cf-46d3-9593-07771ad3c845",
              "parentUUID": "deb24847-9f98-4a98-ad00-2b75245b28b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return error when delete the user which not exists",
              "fullTitle": "Scenarios for Delete user in pet store should return error when delete the user which not exists",
              "timedOut": false,
              "duration": 1071,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var not_exist_user = 'not_exists';\nreturn chakram.delete(`${constant.BASE_URL}${endpoint}/${not_exist_user}`)\n.then(function(res){\n    return expect(res).to.have.status(404);\n});",
              "err": {},
              "uuid": "77a16b9e-4f90-4244-b7ae-9c082ad7e717",
              "parentUUID": "deb24847-9f98-4a98-ad00-2b75245b28b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return error when delete the user with invalid username",
              "fullTitle": "Scenarios for Delete user in pet store should return error when delete the user with invalid username",
              "timedOut": false,
              "duration": 1165,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var invalid_username = '';\nreturn chakram.delete(`${constant.BASE_URL}${endpoint}/${invalid_username}`)\n.then(function(res){\n    return expect(res).to.have.status(400);\n});",
              "err": {
                "message": "AssertionError: expected status code 405 to equal 400",
                "estack": "AssertionError: expected status code 405 to equal 400\n    at /Users/steveli/Work/PetStore/tests/user/delete.js:49:40\n    at _fulfilled (node_modules/q/q.js:854:54)\n    at /Users/steveli/Work/PetStore/node_modules/q/q.js:883:30\n    at Promise.promise.promiseDispatch (node_modules/q/q.js:816:13)\n    at /Users/steveli/Work/PetStore/node_modules/q/q.js:624:44\n    at runSingle (node_modules/q/q.js:137:13)\n    at flush (node_modules/q/q.js:125:13)\n    at processTicksAndRejections (internal/process/task_queues.js:82:9)",
                "diff": null
              },
              "uuid": "4d5aeb16-5942-427b-9b3e-ec8452e328f7",
              "parentUUID": "deb24847-9f98-4a98-ad00-2b75245b28b4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d699bd95-76cf-46d3-9593-07771ad3c845",
            "77a16b9e-4f90-4244-b7ae-9c082ad7e717"
          ],
          "failures": [
            "4d5aeb16-5942-427b-9b3e-ec8452e328f7"
          ],
          "pending": [],
          "skipped": [],
          "duration": 4362,
          "root": false,
          "rootEmpty": false,
          "_timeout": 15000
        },
        {
          "uuid": "cafdc13e-0a26-467d-808f-72eff2d67bb0",
          "title": "Scenarios for Get/Put user in pet store",
          "fullFile": "/Users/steveli/Work/PetStore/tests/user/get_update.js",
          "file": "/tests/user/get_update.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: create a test user, then",
              "fullTitle": "Scenarios for Get/Put user in pet store \"before all\" hook: create a test user, then",
              "timedOut": false,
              "duration": 1277,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var res = chakram.post(`${constant.BASE_URL}${endpoint}`, constant.DEFAULT_USER);\nreturn expect(res).to.have.status(200);",
              "err": {},
              "uuid": "256597ea-ae5a-4e4f-b009-98279212e469",
              "parentUUID": "cafdc13e-0a26-467d-808f-72eff2d67bb0",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "Scenarios for Get/Put user in pet store \"after all\" hook",
              "timedOut": false,
              "duration": 1626,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return chakram.get(`${constant.BASE_URL}${endpoint}/${constant.DEFAULT_USER.username}`)\n.then(function(res) {\n    if (res.status == 200) {\n        return chakram.delete(`${constant.BASE_URL}${endpoint}/${constant.DEFAULT_USER.username}`)\n    }\n});",
              "err": {},
              "uuid": "dff956cb-0a51-497d-9ba6-d90925d9d92c",
              "parentUUID": "cafdc13e-0a26-467d-808f-72eff2d67bb0",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should get the user by username",
              "fullTitle": "Scenarios for Get/Put user in pet store should get the user by username",
              "timedOut": false,
              "duration": 1127,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return chakram.get(`${constant.BASE_URL}${endpoint}/${constant.DEFAULT_USER.username}`)\n.then(function(res) {\n    var user = res.body;\n    expect(user.username).to.equal(constant.DEFAULT_USER.username);\n    expect(user.firstName).to.equal(constant.DEFAULT_USER.firstName);\n    expect(user.lastName).to.equal(constant.DEFAULT_USER.lastName);\n    expect(user.email).to.equal(constant.DEFAULT_USER.email);\n    expect(user.password).to.equal(constant.DEFAULT_USER.password);\n    expect(user.phone).to.equal(constant.DEFAULT_USER.phone);\n});",
              "err": {},
              "uuid": "f1b94e1d-6a69-4fd2-91b6-1df45f2f0ce6",
              "parentUUID": "cafdc13e-0a26-467d-808f-72eff2d67bb0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return error when getting the user by invalid username",
              "fullTitle": "Scenarios for Get/Put user in pet store should return error when getting the user by invalid username",
              "timedOut": false,
              "duration": 1128,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var invalid_username = \"\"\nreturn chakram.get(`${constant.BASE_URL}${endpoint}/${invalid_username}`)\n.then(function(res) {\n    return expect(res).to.have.status(400);\n});",
              "err": {
                "message": "AssertionError: expected status code 405 to equal 400",
                "estack": "AssertionError: expected status code 405 to equal 400\n    at /Users/steveli/Work/PetStore/tests/user/get_update.js:41:40\n    at _fulfilled (node_modules/q/q.js:854:54)\n    at /Users/steveli/Work/PetStore/node_modules/q/q.js:883:30\n    at Promise.promise.promiseDispatch (node_modules/q/q.js:816:13)\n    at /Users/steveli/Work/PetStore/node_modules/q/q.js:624:44\n    at runSingle (node_modules/q/q.js:137:13)\n    at flush (node_modules/q/q.js:125:13)\n    at processTicksAndRejections (internal/process/task_queues.js:82:9)",
                "diff": null
              },
              "uuid": "b9f487b3-0e30-474d-b718-315b04dd61c5",
              "parentUUID": "cafdc13e-0a26-467d-808f-72eff2d67bb0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return error when getting the user which not exists",
              "fullTitle": "Scenarios for Get/Put user in pet store should return error when getting the user which not exists",
              "timedOut": false,
              "duration": 1197,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var not_exist_user = 'not_exists'\nreturn chakram.get(`${constant.BASE_URL}${endpoint}/${not_exist_user}`)\n.then(function(res) {\n    return expect(res).to.have.status(404);\n});",
              "err": {},
              "uuid": "9f8a4947-2539-485c-88a5-d378be5e7cba",
              "parentUUID": "cafdc13e-0a26-467d-808f-72eff2d67bb0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update user information without error",
              "fullTitle": "Scenarios for Get/Put user in pet store should update user information without error",
              "timedOut": false,
              "duration": 2649,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var updateUserData = Object.assign({}, constant.DEFAULT_USER);\nupdateUserData.firstName = `update_${updateUserData.firstName}`;\nupdateUserData.lastName = `update_${updateUserData.lastName}`;\nupdateUserData.email = `update_${updateUserData.email}`;\n\nreturn chakram.put(`${constant.BASE_URL}${endpoint}/${updateUserData.username}`, updateUserData)\n.then(function() {\n    return chakram.get(`${constant.BASE_URL}${endpoint}/${updateUserData.username}`)\n}).then(function(res){\n    var user = res.body;\n    expect(user.username).to.equal(updateUserData.username);\n    expect(user.firstName).to.equal(updateUserData.firstName);\n    expect(user.lastName).to.equal(updateUserData.lastName);\n    expect(user.email).to.equal(updateUserData.email);\n    expect(user.password).to.equal(updateUserData.password);\n    expect(user.phone).to.equal(updateUserData.phone);\n    return;\n});",
              "err": {},
              "uuid": "3e21c042-0e2f-45e4-bb78-b692fcd41da8",
              "parentUUID": "cafdc13e-0a26-467d-808f-72eff2d67bb0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update username without error",
              "fullTitle": "Scenarios for Get/Put user in pet store should update username without error",
              "timedOut": false,
              "duration": 2364,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var updateUserData = Object.assign({}, constant.DEFAULT_USER);\nupdateUserData.username = `update_${updateUserData.username}`;\n\nreturn chakram.put(`${constant.BASE_URL}${endpoint}/${constant.DEFAULT_USER.username}`, updateUserData)\n.then(function() {\n    return chakram.get(`${constant.BASE_URL}${endpoint}/${updateUserData.username}`)\n}).then(function(res){\n    var user = res.body;\n    expect(user.username).to.equal(updateUserData.username);\n    expect(user.firstName).to.equal(updateUserData.firstName);\n    expect(user.lastName).to.equal(updateUserData.lastName);\n    expect(user.email).to.equal(updateUserData.email);\n    expect(user.password).to.equal(updateUserData.password);\n    expect(user.phone).to.equal(updateUserData.phone);\n    return;\n});",
              "err": {},
              "uuid": "a7c4b844-0002-449d-9b60-17e1737ce694",
              "parentUUID": "cafdc13e-0a26-467d-808f-72eff2d67bb0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update user status without error",
              "fullTitle": "Scenarios for Get/Put user in pet store should update user status without error",
              "timedOut": false,
              "duration": 2293,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var updateUserData = Object.assign({}, constant.DEFAULT_USER);\nupdateUserData.userStatus = 1;\n\nreturn chakram.put(`${constant.BASE_URL}${endpoint}/${updateUserData.username}`, updateUserData)\n.then(function() {\n    return chakram.get(`${constant.BASE_URL}${endpoint}/${updateUserData.username}`)\n}).then(function(res){\n    var user = res.body;\n    expect(user.username).to.equal(updateUserData.username);\n    expect(user.firstName).to.equal(updateUserData.firstName);\n    expect(user.lastName).to.equal(updateUserData.lastName);\n    expect(user.email).to.equal(updateUserData.email);\n    expect(user.password).to.equal(updateUserData.password);\n    expect(user.phone).to.equal(updateUserData.phone);\n    expect(user.userStatus).to.equal(1);\n    return;\n});",
              "err": {},
              "uuid": "b7253d65-f1a9-4ae5-85fb-2d99cdc0d8a6",
              "parentUUID": "cafdc13e-0a26-467d-808f-72eff2d67bb0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return error when update user which not exists",
              "fullTitle": "Scenarios for Get/Put user in pet store should return error when update user which not exists",
              "timedOut": false,
              "duration": 1121,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var updateUserData = Object.assign({}, constant.DEFAULT_USER);\nupdateUserData.email = `update_${updateUserData.email}`;\nvar not_exist_user = 'not_exists';\n\nreturn chakram.put(`${constant.BASE_URL}${endpoint}/${not_exist_user}`, updateUserData)\n.then(function(res) {\n    return expect(res).to.have.status(404);\n});",
              "err": {
                "message": "AssertionError: expected status code 200 to equal 404",
                "estack": "AssertionError: expected status code 200 to equal 404\n    at /Users/steveli/Work/PetStore/tests/user/get_update.js:126:40\n    at _fulfilled (node_modules/q/q.js:854:54)\n    at /Users/steveli/Work/PetStore/node_modules/q/q.js:883:30\n    at Promise.promise.promiseDispatch (node_modules/q/q.js:816:13)\n    at /Users/steveli/Work/PetStore/node_modules/q/q.js:624:44\n    at runSingle (node_modules/q/q.js:137:13)\n    at flush (node_modules/q/q.js:125:13)\n    at processTicksAndRejections (internal/process/task_queues.js:82:9)",
                "diff": null
              },
              "uuid": "ca498a37-5dc2-467f-855a-492db46fe859",
              "parentUUID": "cafdc13e-0a26-467d-808f-72eff2d67bb0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return error when update user with invalid username",
              "fullTitle": "Scenarios for Get/Put user in pet store should return error when update user with invalid username",
              "timedOut": false,
              "duration": 1056,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var updateUserData = Object.assign({}, constant.DEFAULT_USER);\nupdateUserData.email = `update_${updateUserData.email}`;\nvar invalid_username = '';\n\nreturn chakram.put(`${constant.BASE_URL}${endpoint}/${invalid_username}`, updateUserData)\n.then(function(res) {\n    return expect(res).to.have.status(400);\n});",
              "err": {
                "message": "AssertionError: expected status code 405 to equal 400",
                "estack": "AssertionError: expected status code 405 to equal 400\n    at /Users/steveli/Work/PetStore/tests/user/get_update.js:139:40\n    at _fulfilled (node_modules/q/q.js:854:54)\n    at /Users/steveli/Work/PetStore/node_modules/q/q.js:883:30\n    at Promise.promise.promiseDispatch (node_modules/q/q.js:816:13)\n    at /Users/steveli/Work/PetStore/node_modules/q/q.js:624:44\n    at runSingle (node_modules/q/q.js:137:13)\n    at flush (node_modules/q/q.js:125:13)\n    at processTicksAndRejections (internal/process/task_queues.js:82:9)",
                "diff": null
              },
              "uuid": "66449261-6c61-4fda-b4ed-39a7c1e1c611",
              "parentUUID": "cafdc13e-0a26-467d-808f-72eff2d67bb0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return error when update user with invalid type data",
              "fullTitle": "Scenarios for Get/Put user in pet store should return error when update user with invalid type data",
              "timedOut": false,
              "duration": 1308,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var updateUserData = Object.assign({}, constant.DEFAULT_USER);\nupdateUserData.userStatus = `string`;\n\nreturn chakram.put(`${constant.BASE_URL}${endpoint}/${constant.DEFAULT_USER.username}`, updateUserData)\n.then(function(res) {\n    return expect(res).to.have.status(500);\n});",
              "err": {},
              "uuid": "1a65c1cd-2d21-4154-bd97-f129671b6574",
              "parentUUID": "cafdc13e-0a26-467d-808f-72eff2d67bb0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f1b94e1d-6a69-4fd2-91b6-1df45f2f0ce6",
            "9f8a4947-2539-485c-88a5-d378be5e7cba",
            "3e21c042-0e2f-45e4-bb78-b692fcd41da8",
            "a7c4b844-0002-449d-9b60-17e1737ce694",
            "b7253d65-f1a9-4ae5-85fb-2d99cdc0d8a6",
            "1a65c1cd-2d21-4154-bd97-f129671b6574"
          ],
          "failures": [
            "b9f487b3-0e30-474d-b718-315b04dd61c5",
            "ca498a37-5dc2-467f-855a-492db46fe859",
            "66449261-6c61-4fda-b4ed-39a7c1e1c611"
          ],
          "pending": [],
          "skipped": [],
          "duration": 14243,
          "root": false,
          "rootEmpty": false,
          "_timeout": 15000
        },
        {
          "uuid": "b068fe5a-4163-4651-971c-b09f21c3fabd",
          "title": "Scenarios for user login / logout in pet store",
          "fullFile": "/Users/steveli/Work/PetStore/tests/user/login_logout.js",
          "file": "/tests/user/login_logout.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: create a test user, then",
              "fullTitle": "Scenarios for user login / logout in pet store \"before all\" hook: create a test user, then",
              "timedOut": false,
              "duration": 1185,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "userCreatePost = chakram.post(`${constant.BASE_URL}${endpoint}`, constant.DEFAULT_USER);\nreturn expect(userCreatePost).to.have.status(200);",
              "err": {},
              "uuid": "70ad6ca6-1fda-42c5-9afa-1d9694baf3a3",
              "parentUUID": "b068fe5a-4163-4651-971c-b09f21c3fabd",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "Scenarios for user login / logout in pet store \"after all\" hook",
              "timedOut": false,
              "duration": 1222,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return chakram.get(`${constant.BASE_URL}${endpoint}/${constant.DEFAULT_USER.username}`)\n.then(function(res) {\n    if (res.status == 200) {\n        return chakram.delete(`${constant.BASE_URL}${endpoint}/${constant.DEFAULT_USER.username}`)\n    }\n});",
              "err": {},
              "uuid": "1243d977-3787-4807-acf6-df99693b8d4e",
              "parentUUID": "b068fe5a-4163-4651-971c-b09f21c3fabd",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should login with correct username and password",
              "fullTitle": "Scenarios for user login / logout in pet store should login with correct username and password",
              "timedOut": false,
              "duration": 1284,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return chakram.get(`${constant.BASE_URL}${endpoint}/login?username=${constant.DEFAULT_USER.username}&password=${constant.DEFAULT_USER.password}`)\n.then(function(res){\n    return expect(/logged in user session:\\d+/.test(res.body)).to.be.true;\n});",
              "err": {},
              "uuid": "375694f2-42b6-4082-a8cc-2dbc52b584a3",
              "parentUUID": "b068fe5a-4163-4651-971c-b09f21c3fabd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return error when login with incorrect username or password",
              "fullTitle": "Scenarios for user login / logout in pet store should return error when login with incorrect username or password",
              "timedOut": false,
              "duration": 1220,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var invalid_username, invalid_password;\ninvalid_username = '';\ninvalid_password = '';\nreturn chakram.get(`${constant.BASE_URL}${endpoint}/login?username=${invalid_username}&password=${invalid_password}`)\n.then(function(res){\n    return expect(res).to.have.status(400);\n});",
              "err": {
                "message": "AssertionError: expected status code 200 to equal 400",
                "estack": "AssertionError: expected status code 200 to equal 400\n    at /Users/steveli/Work/PetStore/tests/user/login_logout.js:40:40\n    at _fulfilled (node_modules/q/q.js:854:54)\n    at /Users/steveli/Work/PetStore/node_modules/q/q.js:883:30\n    at Promise.promise.promiseDispatch (node_modules/q/q.js:816:13)\n    at /Users/steveli/Work/PetStore/node_modules/q/q.js:624:44\n    at runSingle (node_modules/q/q.js:137:13)\n    at flush (node_modules/q/q.js:125:13)\n    at processTicksAndRejections (internal/process/task_queues.js:82:9)",
                "diff": null
              },
              "uuid": "e1e911d0-9b9e-4de4-9bb3-460a6da4552b",
              "parentUUID": "b068fe5a-4163-4651-971c-b09f21c3fabd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should logout",
              "fullTitle": "Scenarios for user login / logout in pet store should logout",
              "timedOut": false,
              "duration": 1082,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return chakram.get(`${constant.BASE_URL}${endpoint}/logout`)\n.then(function(res){\n    return expect(res).to.have.status(200);\n});",
              "err": {},
              "uuid": "0a400e5e-5ca0-431b-b4e6-76f343f2a5c3",
              "parentUUID": "b068fe5a-4163-4651-971c-b09f21c3fabd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "375694f2-42b6-4082-a8cc-2dbc52b584a3",
            "0a400e5e-5ca0-431b-b4e6-76f343f2a5c3"
          ],
          "failures": [
            "e1e911d0-9b9e-4de4-9bb3-460a6da4552b"
          ],
          "pending": [],
          "skipped": [],
          "duration": 3586,
          "root": false,
          "rootEmpty": false,
          "_timeout": 15000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 15000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": null,
      "version": "4.1.0"
    }
  }
}